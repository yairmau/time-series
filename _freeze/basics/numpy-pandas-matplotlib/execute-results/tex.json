{
  "hash": "0fab797a6717a6396212dfcc8c2e9268",
  "result": {
    "markdown": "---\ntitle: \"numpy, pandas, matplotlib\"\nexecute:\n  # echo: false\n  freeze: auto  # re-render only when source changes\n---\n\n```python\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n```\n\nThe three lines above are the most common way you will start every project in this course.\n\n* **numpy** = numerical python. This library has a ton useful mathematical functions, and most importantly, it has an object called `numpy array`, which is one of the most useful data structures we have for time series analysis.\n* **pandas** is built upon numpy, and allows us to easily manipulate data stored in `dataframes`, a fancy name for a table.\n* **pyplot** is a submodule of `matplotlib`, and allows us to beautifully plot data.\n\nThe best resource I know to get acquainted with all three packages is [Python Data Science Handbook, by Jake VanderPlas](https://jakevdp.github.io/PythonDataScienceHandbook/index.html){target=\"_blank\"}. This is a free online book, with excellent step by step examples.\n\n## pandas\n\nWe will primarily use the Pandas package to deal with data.\nPandas has become the standard Python tool to manipulate time series, and you should get acquainted with its basic usage. This course will provide you the opportunity to learn by example, but I'm sure we will only scratch the surface, and you'll be left with lots of questions.\n\nI provide below a (non-comprehensive) list of useful tutorials, they are a good reference for the beginner and for the experienced user.\n\n* [Python Data Science Handbook, by Jake VanderPlas](https://jakevdp.github.io/PythonDataScienceHandbook/index.html){target=\"_blank\"}\n* [Data Wrangling with pandas Cheat Sheet](https://pandas.pydata.org/Pandas_Cheat_Sheet.pdf){target=\"_blank\"}\n* [Working with Dates and Times in Python](https://images.datacamp.com/image/upload/v1666944896/Marketing/Blog/Working_with_Dates_and_Times_Cheat_Sheet.pdf){target=\"_blank\"}\n* [Cheat Sheet: The pandas DataFrame Object](https://www.webpages.uidaho.edu/~stevel/cheatsheets/Pandas%20DataFrame%20Notes_12pages.pdf){target=\"_blank\"}\n* [YouTube tutorials](https://www.youtube.com/watch?v=ZyhVh-qRZPA&list=PL-osiE80TeTsWmV9i9c58mdDCSskIFdDS&pp=iAQB){target=\"_blank\"} by Corey Schafer\n\n## pyplot\n\nMatplotlib, and its submodule pyplot, are probably the most common Python plotting tool. Pyplot is both great and horrible:\n\n* Great: you'll have absolutely full control of everything you want to plot. The sky is the limit.\n* Horrible: you'll cry as you do it, because there is so much to know, and it is not the most friendly plotting package.\n\nPyplot is *object oriented*, so you will usually manipulate the **axes** object like this.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n\nx = [1, 2, 3, 4, 5]\ny = [1, 4, 2, 0, 3]\n\n# Figure with two plots\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize = (8, 6))\n# plot on the left\nax1.plot(x, y, color=\"tab:blue\")\nax1.plot(x, y[::-1], color=\"tab:orange\")\nax1.set(xlabel=\"date\",\n        ylabel=\"something\",\n        title=\"left panel\")\n# plot on the right\nax2.plot(x, y[::-1])\nax2.set(xlabel=\"date\",\n        ylabel=\"something else\",\n        title=\"right panel\")\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n[Text(0.5, 0, 'date'),\n Text(0, 0.5, 'something else'),\n Text(0.5, 1.0, 'right panel')]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](numpy-pandas-matplotlib_files/figure-pdf/cell-2-output-2.pdf){fig-pos='H'}\n:::\n:::\n\n\nFor the very beginners, you need to know that `figure` refers to the whole white canvas, and `axes` means the rectangle inside which something will be plotted:\n\n![](fig-2-plots.png)\n\nThe image above is good because it has 2 panels, and it's easy to understand what going on.\nSadly, they mixed the two terms, axis and axes.\n\n- **axes** is where the whole plot will be drawn. In the figure above it is the same as each panel.\n- **axis** is each of the vertical and horizontal lines, where you have ticks and numbers.\n\n![](axis-vs-axes.png)\n\nIf you are new to all this, I recommend that you go to:\n\n* [Earth Lab's Introduction to Plotting in Python Using Matplotlib](https://www.earthdatascience.org/courses/scientists-guide-to-plotting-data-in-python/plot-with-matplotlib/introduction-to-matplotlib-plots/){target=\"_blank\"}\n* [Jake VanderPlas's Python Data Science Handbook](https://jakevdp.github.io/PythonDataScienceHandbook/index.html){target=\"_blank\"}\n\n",
    "supporting": [
      "numpy-pandas-matplotlib_files/figure-pdf"
    ],
    "filters": []
  }
}